--- java/org/apache/jasper/compiler/JDTCompiler.java.orig	2018-02-01 10:13:12.975989687 -0500
+++ java/org/apache/jasper/compiler/JDTCompiler.java	2018-02-01 10:15:47.913534769 -0500
@@ -67,7 +67,6 @@ public class JDTCompiler extends org.apa
     /**
      * Compile the servlet from .java file to .class file
      */
-    @Override
     protected void generateClass(String[] smap)
         throws FileNotFoundException, JasperException, Exception {
 
@@ -98,12 +97,10 @@ public class JDTCompiler extends org.apa
                 this.sourceFile = sourceFile;
             }
 
-            @Override
             public char[] getFileName() {
                 return sourceFile.toCharArray();
             }
 
-            @Override
             public char[] getContents() {
                 char[] result = null;
                 FileInputStream is = null;
@@ -145,7 +142,6 @@ public class JDTCompiler extends org.apa
                 return result;
             }
 
-            @Override
             public char[] getMainTypeName() {
                 int dot = className.lastIndexOf('.');
                 if (dot > 0) {
@@ -154,7 +150,6 @@ public class JDTCompiler extends org.apa
                 return className.toCharArray();
             }
 
-            @Override
             public char[][] getPackageName() {
                 StringTokenizer izer =
                     new StringTokenizer(className, ".");
@@ -166,7 +161,6 @@ public class JDTCompiler extends org.apa
                 return result;
             }
 
-            @Override
             public boolean ignoreOptionalProblems() {
                 return false;
             }
@@ -174,7 +168,6 @@ public class JDTCompiler extends org.apa
 
         final INameEnvironment env = new INameEnvironment() {
 
-                @Override
                 public NameEnvironmentAnswer
                     findType(char[][] compoundTypeName) {
                     StringBuilder result = new StringBuilder();
@@ -187,7 +180,6 @@ public class JDTCompiler extends org.apa
                     return findType(result.toString());
                 }
 
-                @Override
                 public NameEnvironmentAnswer
                     findType(char[] typeName,
                              char[][] packageName) {
@@ -269,7 +261,6 @@ public class JDTCompiler extends org.apa
                     }
                 }
 
-                @Override
                 public boolean isPackage(char[][] parentPackageName,
                                          char[] packageName) {
                     StringBuilder result = new StringBuilder();
@@ -291,7 +282,6 @@ public class JDTCompiler extends org.apa
                     return isPackage(result.toString());
                 }
 
-                @Override
                 public void cleanup() {
                 }
 
@@ -340,12 +330,6 @@ public class JDTCompiler extends org.apa
             } else if(opt.equals("1.7")) {
                 settings.put(CompilerOptions.OPTION_Source,
                              CompilerOptions.VERSION_1_7);
-            } else if(opt.equals("1.8")) {
-                settings.put(CompilerOptions.OPTION_Source,
-                             CompilerOptions.VERSION_1_8);
-            } else if(opt.equals("1.9")) {
-                settings.put(CompilerOptions.OPTION_Source,
-                             "1.9"); // CompilerOptions.VERSION_1_9
             } else {
                 log.warn("Unknown source VM " + opt + " ignored.");
                 settings.put(CompilerOptions.OPTION_Source,
@@ -387,16 +371,6 @@ public class JDTCompiler extends org.apa
                              CompilerOptions.VERSION_1_7);
                 settings.put(CompilerOptions.OPTION_Compliance,
                         CompilerOptions.VERSION_1_7);
-            } else if(opt.equals("1.8")) {
-                settings.put(CompilerOptions.OPTION_TargetPlatform,
-                             CompilerOptions.VERSION_1_8);
-                settings.put(CompilerOptions.OPTION_Compliance,
-                        CompilerOptions.VERSION_1_8);
-            } else if(opt.equals("1.9")) {
-                settings.put(CompilerOptions.OPTION_TargetPlatform,
-                            "1.9"); // CompilerOptions.VERSION_1_9
-                settings.put(CompilerOptions.OPTION_Compliance,
-                        "1.9"); // CompilerOptions.VERSION_1_9
             } else {
                 log.warn("Unknown target VM " + opt + " ignored.");
                 settings.put(CompilerOptions.OPTION_TargetPlatform,
@@ -414,7 +388,6 @@ public class JDTCompiler extends org.apa
             new DefaultProblemFactory(Locale.getDefault());
 
         final ICompilerRequestor requestor = new ICompilerRequestor() {
-                @Override
                 public void acceptResult(CompilationResult result) {
                     try {
                         if (result.hasProblems()) {
